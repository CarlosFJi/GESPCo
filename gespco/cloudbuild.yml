
# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

#steps:
#- name: 'gcr.io/cloud-builders/git'
#  args: ['clone', 'https://github.com/flutter/flutter']
#  dir: '/workspace'

# To run flutter build apk, one must need to  be at the root of the project, the script simply cd to the root before
# running the build command
#- name: 'gcr.io/gespco-cfj5b/repo-gespco'
#  entrypoint: '/bin/bash'
#  args: ['build. sh']

# apk artifacts can be pushed to a GCS bucket like this
# - name: 'gcr.io/cloud-builders/gsutil'
#   args: ['cp', '/workspace/flutter/examples/hello_world/build/app/outputs/apk/release/app-release.apk', 'gs://$MY_BUCKET/hello_world.apk']

#tags: ['cloud-builders-community']

steps:
  # Step 0: Flutter install git
#  - name: 'gcr.io/cloud-builders/git'
#    args: ['clone', 'https://github.com/flutter/flutter']
#    dir: '/workspace'
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/flutter/flutter']
    dir: '/workspace'

  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/CarlosFJi/GESPCo']
  
  - name: 'gcr.io/$PROJECT_ID/app'
    entrypoint: '/bin/bash'
    dir: '/gespco'
    args: ['cloudbuild.sh']  
  
  - name: 'gcr.io/cloud-builders/firebase'
    args: ['login']

  - name: 'gcr.io/cloud-builders/firebase'
    args: ['init hosting']

  # Step 2: Deploy to Firebase Hosting
  - name: 'gcr.io/cloud-builders/firebase'
    args: ['deploy --only=hosting']
  # This is only necessary if using the token authentication method

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'
